---
- name: Set up all Nginx ingresses
  hosts: control_plane[0]
  become: false
  vars:
    gameland_manifest: gameland-nginx-ingress.yaml
    gameland_manifest_destination: "/home/{{ ansible_user }}/{{ gameland_manifest }}"
    prometheus_manifest: prometheus-nginx-ingress.yaml
    prometheus_manifest_destination: "/home/{{ ansible_user }}/{{ prometheus_manifest }}"
    grafana_manifest: grafana-nginx-ingress.yaml
    grafana_manifest_destination: "/home/{{ ansible_user }}/{{ grafana_manifest }}"
    nodeport_nginx_manifest: nodeport-nginx.yaml
    nodeport_nginx_manifest_destination: "/home/{{ ansible_user }}/{{ nodeport_nginx_manifest }}"
    ingress_namespace: "ingress-nginx" 
  
  tasks:
    - name: Add ingress-nginx Helm repo
      shell: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      register: helm_add_repo
      changed_when: "'has been added' in helm_add_repo.stdout or 'already exists' in helm_add_repo.stdout"

    - name: Update Helm repos
      shell: helm repo update
      register: helm_repo_update
      changed_when: "'Update Complete' in helm_repo_update.stdout"

    - name: Install Nginx Ingress Controller
      shell: |
        helm install nginx-ingress ingress-nginx/ingress-nginx --kubeconfig {{ kubeconfig_path }} --namespace {{ ingress_namespace }} --create-namespace
      register: helm_nginx_install
      changed_when: "'STATUS: deployed' in helm_nginx_install.stdout"

    - name: Wait for Nginx Ingress Controller pod to be ready
      shell: |
        kubectl --kubeconfig {{ kubeconfig_path }} wait pod -n {{ ingress_namespace }} \
          -l app.kubernetes.io/name=ingress-nginx --for=condition=Ready --timeout=120s

    - name: Copy nodeport Nginx ingress manifest
      copy:
        src: "{{ playbook_dir }}/../../files/manifests/ingress/nginx/{{ nodeport_nginx_manifest }}"
        dest: "{{ nodeport_nginx_manifest_destination }}"

    - name: Apply nodeport Nginx ingress manifest
      shell: |
        kubectl --kubeconfig {{ kubeconfig_path }} apply -f {{ nodeport_nginx_manifest_destination }}
      register: nodeport_nginx_apply
      changed_when: "'created' in nodeport_nginx_apply.stdout or 'configured' in nodeport_nginx_apply.stdout"

    - name: Copy Gameland Nginx ingress manifest
      copy:
        src: "{{ playbook_dir }}/../../files/manifests/gameland/{{ gameland_manifest }}"
        dest: "{{ gameland_manifest_destination }}"

    - name: Apply Gameland Nginx ingress manifest
      shell: |
        kubectl --kubeconfig {{ kubeconfig_path }} apply -f {{ gameland_manifest_destination }}
      register: gameland_nginx_ingress_apply
      changed_when: "'created' in gameland_nginx_ingress_apply.stdout or 'configured' in gameland_nginx_ingress_apply.stdout"

    - name: Copy Grafana Nginx ingress manifest
      copy:
        src: "{{ playbook_dir }}/../../files/manifests/prometheus_grafana/{{ grafana_manifest }}"
        dest: "{{ grafana_manifest_destination }}"

    - name: Apply Grafana Nginx ingress manifest
      shell: |
        kubectl --kubeconfig {{ kubeconfig_path }} apply -f {{ grafana_manifest_destination }}
      register: grafana_nginx_ingress_apply
      changed_when: "'created' in grafana_nginx_ingress_apply.stdout or 'configured' in grafana_nginx_ingress_apply.stdout"
